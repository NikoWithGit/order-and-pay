// Code generated by MockGen. DO NOT EDIT.
// Source: intrface/itx.go

// Package mock_intrface is a generated GoMock package.
package mock_intrface

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockItx is a mock of Itx interface.
type MockItx struct {
	ctrl     *gomock.Controller
	recorder *MockItxMockRecorder
}

// MockItxMockRecorder is the mock recorder for MockItx.
type MockItxMockRecorder struct {
	mock *MockItx
}

// NewMockItx creates a new mock instance.
func NewMockItx(ctrl *gomock.Controller) *MockItx {
	mock := &MockItx{ctrl: ctrl}
	mock.recorder = &MockItxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItx) EXPECT() *MockItxMockRecorder {
	return m.recorder
}

// Commit mocks base method.
func (m *MockItx) Commit() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Commit")
	ret0, _ := ret[0].(error)
	return ret0
}

// Commit indicates an expected call of Commit.
func (mr *MockItxMockRecorder) Commit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Commit", reflect.TypeOf((*MockItx)(nil).Commit))
}

// Rollback mocks base method.
func (m *MockItx) Rollback() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Rollback")
	ret0, _ := ret[0].(error)
	return ret0
}

// Rollback indicates an expected call of Rollback.
func (mr *MockItxMockRecorder) Rollback() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockItx)(nil).Rollback))
}
