// Code generated by MockGen. DO NOT EDIT.
// Source: intrface/idb.go

// Package mock_intrface is a generated GoMock package.
package mock_intrface

import (
	intrface "order-and-pay/intrface"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIdb is a mock of Idb interface.
type MockIdb struct {
	ctrl     *gomock.Controller
	recorder *MockIdbMockRecorder
}

// MockIdbMockRecorder is the mock recorder for MockIdb.
type MockIdbMockRecorder struct {
	mock *MockIdb
}

// NewMockIdb creates a new mock instance.
func NewMockIdb(ctrl *gomock.Controller) *MockIdb {
	mock := &MockIdb{ctrl: ctrl}
	mock.recorder = &MockIdbMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdb) EXPECT() *MockIdbMockRecorder {
	return m.recorder
}

// Begin mocks base method.
func (m *MockIdb) Begin() (intrface.Itx, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Begin")
	ret0, _ := ret[0].(intrface.Itx)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Begin indicates an expected call of Begin.
func (mr *MockIdbMockRecorder) Begin() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Begin", reflect.TypeOf((*MockIdb)(nil).Begin))
}
